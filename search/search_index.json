{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"About PartEmitter PartEmitter is an open-source module designed to allow the emission of particles that can physically interact with their environment on Roblox. It allows you to create Physical Particle Emitter objects that, for the most part, act just like regular ParticleEmitters. However, unlike ParticleEmitters, PartEmitters are, for example, able to detect when a particle is touched and can even be affected by the physics engine. All of these behaviours can be configured by the user to suit their need. Info To understand this documentation, basic understanding of Lua is required. Critical performance notice This module is not meant to replace all regular ParticleEmitters in your project. Only use it where you have to to avoid unnecessarily degrading the performance of your experience.","title":"About"},{"location":"#about-partemitter","text":"PartEmitter is an open-source module designed to allow the emission of particles that can physically interact with their environment on Roblox. It allows you to create Physical Particle Emitter objects that, for the most part, act just like regular ParticleEmitters. However, unlike ParticleEmitters, PartEmitters are, for example, able to detect when a particle is touched and can even be affected by the physics engine. All of these behaviours can be configured by the user to suit their need. Info To understand this documentation, basic understanding of Lua is required. Critical performance notice This module is not meant to replace all regular ParticleEmitters in your project. Only use it where you have to to avoid unnecessarily degrading the performance of your experience.","title":"About PartEmitter"},{"location":"api-reference/PartEmitter/","text":"PartEmitter PartEmitter is the primary class of the module, giving access to the basic high-level functionality of the system. PartEmitter will be returned from require(PartEmitter) . Creating a new PartEmitter PartEmitter PartEmitter.new() Creates a new PartEmitter, which represents a single ParticleEmitter from a single source. Important PartEmitters are disabled and their Parent property is set to nil by default. Enabling the emitter with PartEmitter.Enabled = true and setting its parent to a BasePart with PartEmitter.Parent = Part is required for particles to be shown. More about properties below. Properties string UUID A unique identifier for this PartEmitter. boolean IsRigidBody = false If true, particles emitted will act like regular unanchored BaseParts. Overrides property This property overrides the Acceleration property. Warning Emitting a large number of rigid body particles may severely affect performance. string CollisionGroup The name of the collision group the Particles generated by the PartEmitter should use. If nil , Particles will use the global default collision group. integer MaxEmissionsPerHearbeat = 1 Maximum number of Particles the PartEmitter is allowed to emit in a single Heartbeat. Warning Setting this and the Rate property high enough may cause severe lag. Instance Parent Where the Particles will be emitted from. Important Particles will only be emitted if Parent is a BasePart. Instance (ParticleContainer) An optional container object for the Particles. If nil , Parent will be used. float LastEmission Time when the latest Particle was emitted. Important Manually emitting Particles by calling PartEmitter:Emit() will not update this value. RBXScriptConnection HeartbeatConnection This PartEmitter's connection to the Heartbeat event. Used for repeatedly emitting new particles when Enabled is true and Parent is a BasePart. Inherited from ParticleEmitter : boolean Enabled float Brightness ColorSequence Color float LightEmission float LightInfluence ParticleOrientation ParticleOrientation NumberSequence Size NumberSequence Squash string Texture NumberSequence Transparency float ZOffset Note ZOffset is ignored by the Particle's collision box. NormalId EmissionDirection NumberRange Lifetime float Rate NumberRange Rotation NumberRange RotSpeed NumberRange Speed Missing Feature Support for SpreadAngle has not yet been implemented in the module. ParticleEmitterShape Shape Partial Support Currently only Box and Sphere are supported. ParticleEmitterShapeInOut ShapeInOut ShapeStyle ShapeStyle Vector3 Acceleration Inherited from BasePart : PartType PartType boolean CanCollide = false Important If IsRigidBody is false, Particles can still move through solid objects even with CanCollide enabled. boolean CanTouch = false boolean CanQuery = false Methods void LoadPropertiesFromParticleEmitter( ParticleEmitter particleEmitter , boolean setParent? ) Sets the PartEmitter's properties to match those of the given ParticleEmitter. If setParent is true, the PartEmitter's Parent property will be set to the Parent of the given ParticleEmitter. void Emit( integer emitCount? = 1 ) Emits the given number of Particles. Uses the default value 1 if no emitCount is given. void Clear() Clears all Particles the PartEmitter still has. void Destroy() Clears the PartEmitter's Particles and removes the PartEmitter. Events RBXScriptSignal ParticleAdded( Particle particle ) This event fires when a new Particle is created by the PartEmitter. The returned newParticle is the Particle object that was created. RBXScriptSignal ParticleRemoving( Particle particle ) This event fires when a Particle originally created by the PartEmitter is going to be destroyed. The returned value is the Particle that's being removed. RBXScriptSignal Destroying() This event fires when the PartEmitter's Destroy method is called.","title":"PartEmitter"},{"location":"api-reference/PartEmitter/#partemitter","text":"PartEmitter is the primary class of the module, giving access to the basic high-level functionality of the system. PartEmitter will be returned from require(PartEmitter) .","title":"PartEmitter"},{"location":"api-reference/PartEmitter/#creating-a-new-partemitter","text":"","title":"Creating a new PartEmitter"},{"location":"api-reference/PartEmitter/#partemitter-partemitternew","text":"Creates a new PartEmitter, which represents a single ParticleEmitter from a single source. Important PartEmitters are disabled and their Parent property is set to nil by default. Enabling the emitter with PartEmitter.Enabled = true and setting its parent to a BasePart with PartEmitter.Parent = Part is required for particles to be shown. More about properties below.","title":"PartEmitter PartEmitter.new()"},{"location":"api-reference/PartEmitter/#properties","text":"","title":"Properties"},{"location":"api-reference/PartEmitter/#string-uuid","text":"A unique identifier for this PartEmitter.","title":"string UUID"},{"location":"api-reference/PartEmitter/#boolean-isrigidbody-false","text":"If true, particles emitted will act like regular unanchored BaseParts. Overrides property This property overrides the Acceleration property. Warning Emitting a large number of rigid body particles may severely affect performance.","title":"boolean IsRigidBody = false"},{"location":"api-reference/PartEmitter/#string-collisiongroup","text":"The name of the collision group the Particles generated by the PartEmitter should use. If nil , Particles will use the global default collision group.","title":"string CollisionGroup"},{"location":"api-reference/PartEmitter/#integer-maxemissionsperhearbeat-1","text":"Maximum number of Particles the PartEmitter is allowed to emit in a single Heartbeat. Warning Setting this and the Rate property high enough may cause severe lag.","title":"integer MaxEmissionsPerHearbeat = 1"},{"location":"api-reference/PartEmitter/#instance-parent","text":"Where the Particles will be emitted from. Important Particles will only be emitted if Parent is a BasePart.","title":"Instance Parent"},{"location":"api-reference/PartEmitter/#instance-particlecontainer","text":"An optional container object for the Particles. If nil , Parent will be used.","title":"Instance (ParticleContainer)"},{"location":"api-reference/PartEmitter/#float-lastemission","text":"Time when the latest Particle was emitted. Important Manually emitting Particles by calling PartEmitter:Emit() will not update this value.","title":"float LastEmission"},{"location":"api-reference/PartEmitter/#rbxscriptconnection-heartbeatconnection","text":"This PartEmitter's connection to the Heartbeat event. Used for repeatedly emitting new particles when Enabled is true and Parent is a BasePart.","title":"RBXScriptConnection HeartbeatConnection"},{"location":"api-reference/PartEmitter/#inherited-from-particleemitter","text":"","title":"Inherited from ParticleEmitter:"},{"location":"api-reference/PartEmitter/#boolean-enabled","text":"","title":"boolean Enabled"},{"location":"api-reference/PartEmitter/#float-brightness","text":"","title":"float Brightness"},{"location":"api-reference/PartEmitter/#colorsequence-color","text":"","title":"ColorSequence Color"},{"location":"api-reference/PartEmitter/#float-lightemission","text":"","title":"float LightEmission"},{"location":"api-reference/PartEmitter/#float-lightinfluence","text":"","title":"float LightInfluence"},{"location":"api-reference/PartEmitter/#particleorientation-particleorientation","text":"","title":"ParticleOrientation ParticleOrientation"},{"location":"api-reference/PartEmitter/#numbersequence-size","text":"","title":"NumberSequence Size"},{"location":"api-reference/PartEmitter/#numbersequence-squash","text":"","title":"NumberSequence Squash"},{"location":"api-reference/PartEmitter/#string-texture","text":"","title":"string Texture"},{"location":"api-reference/PartEmitter/#numbersequence-transparency","text":"","title":"NumberSequence Transparency"},{"location":"api-reference/PartEmitter/#float-zoffset","text":"Note ZOffset is ignored by the Particle's collision box.","title":"float ZOffset"},{"location":"api-reference/PartEmitter/#normalid-emissiondirection","text":"","title":"NormalId EmissionDirection"},{"location":"api-reference/PartEmitter/#numberrange-lifetime","text":"","title":"NumberRange Lifetime"},{"location":"api-reference/PartEmitter/#float-rate","text":"","title":"float Rate"},{"location":"api-reference/PartEmitter/#numberrange-rotation","text":"","title":"NumberRange Rotation"},{"location":"api-reference/PartEmitter/#numberrange-rotspeed","text":"","title":"NumberRange RotSpeed"},{"location":"api-reference/PartEmitter/#numberrange-speed","text":"Missing Feature Support for SpreadAngle has not yet been implemented in the module.","title":"NumberRange Speed"},{"location":"api-reference/PartEmitter/#particleemittershape-shape","text":"Partial Support Currently only Box and Sphere are supported.","title":"ParticleEmitterShape Shape"},{"location":"api-reference/PartEmitter/#particleemittershapeinout-shapeinout","text":"","title":"ParticleEmitterShapeInOut ShapeInOut"},{"location":"api-reference/PartEmitter/#shapestyle-shapestyle","text":"","title":"ShapeStyle ShapeStyle"},{"location":"api-reference/PartEmitter/#vector3-acceleration","text":"","title":"Vector3 Acceleration"},{"location":"api-reference/PartEmitter/#inherited-from-basepart","text":"","title":"Inherited from BasePart:"},{"location":"api-reference/PartEmitter/#parttype-parttype","text":"","title":"PartType PartType"},{"location":"api-reference/PartEmitter/#boolean-cancollide-false","text":"Important If IsRigidBody is false, Particles can still move through solid objects even with CanCollide enabled.","title":"boolean CanCollide = false"},{"location":"api-reference/PartEmitter/#boolean-cantouch-false","text":"","title":"boolean CanTouch = false"},{"location":"api-reference/PartEmitter/#boolean-canquery-false","text":"","title":"boolean CanQuery = false"},{"location":"api-reference/PartEmitter/#methods","text":"","title":"Methods"},{"location":"api-reference/PartEmitter/#void-loadpropertiesfromparticleemitterparticleemitter-particleemitter-boolean-setparent","text":"Sets the PartEmitter's properties to match those of the given ParticleEmitter. If setParent is true, the PartEmitter's Parent property will be set to the Parent of the given ParticleEmitter.","title":"void LoadPropertiesFromParticleEmitter(ParticleEmitter particleEmitter, boolean setParent?)"},{"location":"api-reference/PartEmitter/#void-emitinteger-emitcount-1","text":"Emits the given number of Particles. Uses the default value 1 if no emitCount is given.","title":"void Emit(integer emitCount? = 1)"},{"location":"api-reference/PartEmitter/#void-clear","text":"Clears all Particles the PartEmitter still has.","title":"void Clear()"},{"location":"api-reference/PartEmitter/#void-destroy","text":"Clears the PartEmitter's Particles and removes the PartEmitter.","title":"void Destroy()"},{"location":"api-reference/PartEmitter/#events","text":"","title":"Events"},{"location":"api-reference/PartEmitter/#rbxscriptsignal-particleaddedparticle-particle","text":"This event fires when a new Particle is created by the PartEmitter. The returned newParticle is the Particle object that was created.","title":"RBXScriptSignal ParticleAdded(Particle particle)"},{"location":"api-reference/PartEmitter/#rbxscriptsignal-particleremovingparticle-particle","text":"This event fires when a Particle originally created by the PartEmitter is going to be destroyed. The returned value is the Particle that's being removed.","title":"RBXScriptSignal ParticleRemoving(Particle particle)"},{"location":"api-reference/PartEmitter/#rbxscriptsignal-destroying","text":"This event fires when the PartEmitter's Destroy method is called.","title":"RBXScriptSignal Destroying()"},{"location":"api-reference/Particle/","text":"Particle A Particle is an object that represents a single Particle, usually created by a PartEmitter. Creating a new Particle Particle Particle.new( table particleProperties , table physicalProperties , Vector3 position , Vector3 velocity , boolean isRigidBody? , Instance parent? ) Creates a new Particle object. ParticleProperties includes information on how the Particle should look and act, physicalProperties contains information on collisions, position is the position where the Particle will spawn, velocity is the Particle's intial velocity, isRigidBody determines if the Particle will act like a rigid body object and parent determines the Particle's parent. Important This is a constructor function mainly used by the PartEmitter class. Generally speaking there is no need for the user to use this function. Properties string UUID A unique identifier for this Particle. ParticleEmitter ParticleEmitter The ParticleEmitter used to emit a single particle, which will then stay locked to the Particle's Part. BasePart Part This Part acts as the collider for this Particle. Attachment Attachment Attachment in the centre of the Part, acting as the Parent for the ParticleEmitter. This ensures the visible particle is exactly where it's collider is. Vector3 Velocity Velocity vector of the Particle. Note If IsRigidBody is true, Velocity will only be applied initally when the Particle is created. After that the Particle's movement will be entirely controlled by the physics engine. Vector3 Acceleration Constant acceleration applied to the Particle. Warning This property is overridden if IsRigidBody is true. float CreationTime Time when the Particle was created. RBXScriptConnection HeartbeatConnection This Particle's connection to the Heartbeat event. Used for updating the Particle's position and Part size, as well as removing the Particle once it reaches its assigned lifetime. Methods void Destroy() Destroys all instances associated with the Particle and the Particle object itself. This method is also called automatically when the Particle's age reaches its lifetime. Events RBXScriptSignal Touched( BasePart otherPart ) Same as Particle.Part .Touched . RBXScriptSignal Destroying() This event fires when the Particle's Destroy method is called.","title":"Particle"},{"location":"api-reference/Particle/#particle","text":"A Particle is an object that represents a single Particle, usually created by a PartEmitter.","title":"Particle"},{"location":"api-reference/Particle/#creating-a-new-particle","text":"","title":"Creating a new Particle"},{"location":"api-reference/Particle/#particle-particlenewtable-particleproperties-table-physicalproperties-vector3-position-vector3-velocity-boolean-isrigidbody-instance-parent","text":"Creates a new Particle object. ParticleProperties includes information on how the Particle should look and act, physicalProperties contains information on collisions, position is the position where the Particle will spawn, velocity is the Particle's intial velocity, isRigidBody determines if the Particle will act like a rigid body object and parent determines the Particle's parent. Important This is a constructor function mainly used by the PartEmitter class. Generally speaking there is no need for the user to use this function.","title":"Particle Particle.new(table particleProperties, table physicalProperties, Vector3 position, Vector3 velocity, boolean isRigidBody?, Instance parent?)"},{"location":"api-reference/Particle/#properties","text":"","title":"Properties"},{"location":"api-reference/Particle/#string-uuid","text":"A unique identifier for this Particle.","title":"string UUID"},{"location":"api-reference/Particle/#particleemitter-particleemitter","text":"The ParticleEmitter used to emit a single particle, which will then stay locked to the Particle's Part.","title":"ParticleEmitter ParticleEmitter"},{"location":"api-reference/Particle/#basepart-part","text":"This Part acts as the collider for this Particle.","title":"BasePart Part"},{"location":"api-reference/Particle/#attachment-attachment","text":"Attachment in the centre of the Part, acting as the Parent for the ParticleEmitter. This ensures the visible particle is exactly where it's collider is.","title":"Attachment Attachment"},{"location":"api-reference/Particle/#vector3-velocity","text":"Velocity vector of the Particle. Note If IsRigidBody is true, Velocity will only be applied initally when the Particle is created. After that the Particle's movement will be entirely controlled by the physics engine.","title":"Vector3 Velocity"},{"location":"api-reference/Particle/#vector3-acceleration","text":"Constant acceleration applied to the Particle. Warning This property is overridden if IsRigidBody is true.","title":"Vector3 Acceleration"},{"location":"api-reference/Particle/#float-creationtime","text":"Time when the Particle was created.","title":"float CreationTime"},{"location":"api-reference/Particle/#rbxscriptconnection-heartbeatconnection","text":"This Particle's connection to the Heartbeat event. Used for updating the Particle's position and Part size, as well as removing the Particle once it reaches its assigned lifetime.","title":"RBXScriptConnection HeartbeatConnection"},{"location":"api-reference/Particle/#methods","text":"","title":"Methods"},{"location":"api-reference/Particle/#void-destroy","text":"Destroys all instances associated with the Particle and the Particle object itself. This method is also called automatically when the Particle's age reaches its lifetime.","title":"void Destroy()"},{"location":"api-reference/Particle/#events","text":"","title":"Events"},{"location":"api-reference/Particle/#rbxscriptsignal-touchedbasepart-otherpart","text":"Same as Particle.Part .Touched .","title":"RBXScriptSignal Touched(BasePart otherPart)"},{"location":"api-reference/Particle/#rbxscriptsignal-destroying","text":"This event fires when the Particle's Destroy method is called.","title":"RBXScriptSignal Destroying()"},{"location":"api-reference/Utils/","text":"Utils A simple utility module with some required functions. Functions float evalNS( NumberSequence numberSequence , float time ) Evaluate a NumberSequence's value at the given time. Vector3 getRandomPointInSphere( float minRadius , float maxRadius ) Get a random point inside a sphere that is more than minRadius and less than maxRadius units away from the sphere origin. Vector3 getRandomPointInBox( Vector3 : size , CFrame CFrame? ) Get a ranom point inside a box with the given dimensions. If CFrame is given, take the box orientation into account. CFrame , Vector2 getWorldOrientedSurface( BasePart part , NormalId normalId ) Get the CFrame and dimensions of a surface on a BasePart. Vector3 getRandomPointOnSurface( BasePart part , NormalId normalId ) Get a random point on a BasePart's surface.","title":"Utils"},{"location":"api-reference/Utils/#utils","text":"A simple utility module with some required functions.","title":"Utils"},{"location":"api-reference/Utils/#functions","text":"","title":"Functions"},{"location":"api-reference/Utils/#float-evalnsnumbersequence-numbersequence-float-time","text":"Evaluate a NumberSequence's value at the given time.","title":"float evalNS(NumberSequence numberSequence, float time)"},{"location":"api-reference/Utils/#vector3-getrandompointinspherefloat-minradius-float-maxradius","text":"Get a random point inside a sphere that is more than minRadius and less than maxRadius units away from the sphere origin.","title":"Vector3 getRandomPointInSphere(float minRadius, float maxRadius)"},{"location":"api-reference/Utils/#vector3-getrandompointinboxvector3-size-cframe-cframe","text":"Get a ranom point inside a box with the given dimensions. If CFrame is given, take the box orientation into account.","title":"Vector3 getRandomPointInBox(Vector3: size, CFrame CFrame?)"},{"location":"api-reference/Utils/#cframe-vector2-getworldorientedsurfacebasepart-part-normalid-normalid","text":"Get the CFrame and dimensions of a surface on a BasePart.","title":"CFrame, Vector2 getWorldOrientedSurface(BasePart part, NormalId normalId)"},{"location":"api-reference/Utils/#vector3-getrandompointonsurfacebasepart-part-normalid-normalid","text":"Get a random point on a BasePart's surface.","title":"Vector3 getRandomPointOnSurface(BasePart part, NormalId normalId)"}]}